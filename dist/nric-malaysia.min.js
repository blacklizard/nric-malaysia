!function(a,e){"object"==typeof exports&&"object"==typeof module?module.exports=e(require("moment")):"function"==typeof define&&define.amd?define(["moment"],e):"object"==typeof exports?exports.NRICUtil=e(require("moment")):a.NRICUtil=e(a.moment)}(this,(function(a){return function(a){var e={};function n(i){if(e[i])return e[i].exports;var t=e[i]={i:i,l:!1,exports:{}};return a[i].call(t.exports,t,t.exports,n),t.l=!0,t.exports}return n.m=a,n.c=e,n.d=function(a,e,i){n.o(a,e)||Object.defineProperty(a,e,{enumerable:!0,get:i})},n.r=function(a){"undefined"!=typeof Symbol&&Symbol.toStringTag&&Object.defineProperty(a,Symbol.toStringTag,{value:"Module"}),Object.defineProperty(a,"__esModule",{value:!0})},n.t=function(a,e){if(1&e&&(a=n(a)),8&e)return a;if(4&e&&"object"==typeof a&&a&&a.__esModule)return a;var i=Object.create(null);if(n.r(i),Object.defineProperty(i,"default",{enumerable:!0,value:a}),2&e&&"string"!=typeof a)for(var t in a)n.d(i,t,function(e){return a[e]}.bind(null,t));return i},n.n=function(a){var e=a&&a.__esModule?function(){return a.default}:function(){return a};return n.d(e,"a",e),e},n.o=function(a,e){return Object.prototype.hasOwnProperty.call(a,e)},n.p="",n(n.s=1)}([function(e,n){e.exports=a},function(a,e,n){"use strict";n.r(e);var i=n(0),t=n.n(i),r=function(){function a(a,e){for(var n=0;n<e.length;n++){var i=e[n];i.enumerable=i.enumerable||!1,i.configurable=!0,"value"in i&&(i.writable=!0),Object.defineProperty(a,i.key,i)}}return function(e,n,i){return n&&a(e.prototype,n),i&&a(e,i),e}}();var o=function(){function a(e,n,i){!function(a,e){if(!(a instanceof e))throw new TypeError("Cannot call a class as a function")}(this,a),this.rawDOB=e,this.rawState=n,this.rawEnd=i,this.states={"01|21|22|23|24":"Johor","02|25|26|27":"Kedah","03|28|29":"Kelantan","04|30":"Melaka","05|31|59":"Negeri Sembilan","06|32|33":"Pahang","07|34|35":"Pulau Pinang","08|36|37|38|39":"Perak","09|40":"Perlis","10|41|42|43|44":"Selangor","11|45|46":"Terengganu","12|47|48|49":"Sabah","13|50|51|52|53":"Sarawak","14|54|55|56|57":"Wilayah Persekutuan (Kuala Lumpur)","15|58":"Wilayah Persekutuan (Labuan)",16:"Wilayah Persekutuan (Putrajaya)",60:"Brunei",61:"Indonesia",62:"Cambodia / Democratic Kampuchea / Kampuchea",63:"Laos",64:"Myanmar",65:"Philippines",66:"Singapore",67:"Thailand",68:"Vietnam",71:"A person born outside Malaysia prior to 2001 Excluding those born abroad without holding High Quality Identity Card",72:"A person born outside Malaysia prior to 2001 Excluding those born abroad without holding High Quality Identity Card",74:"China",75:"India",76:"Pakistan",77:"Saudi Arabia",78:"Sri Lanka",79:"Bangladesh",82:"Unknown state",83:"American Samoa / Asia-Pacific / Australia / Christmas Island / Cocos (Keeling) Islands / Cook Islands / Fiji / French Polynesia / Guam / Heard Island and McDonald Islands / Marshall Islands / Micronesia / New Caledonia / New Zealand / Niue / Norfolk Island / Papua New Guinea / Timor Leste / Tokelau / United States Minor Outlying Islands / Wallis and Futuna Islands",84:"Anguilla / Argentina / Aruba / Bolivia / Brazil / Chile / Colombia / Ecuador / French Guinea / Guadeloupe / Guyana / Paraguay / Peru / South America / South Georgia and the South Sandwich Islands / Suriname / Uruguay / Venezuela",85:"Africa / Algeria / Angola / Botswana / Burundi / Cameroon / Central African Republic / Chad / Congo-Brazzaville / Congo-Kinshasa / Djibouti / Egypt / Eritrea / Ethiopia / Gabon / Gambia / Ghana / Guinea / Kenya / Liberia / Malawi / Mali / Mauritania / Mayotte / Morocco / Mozambique / Namibia / Niger / Nigeria / Rwanda / Réunion / Senegal / Sierra Leone / Somalia / South Africa / Sudan / Swaziland / Tanzania / Togo / Tonga / Tunisia / Uganda / Western Sahara / Zaire / Zambia / Zimbabwe",86:"Armenia / Austria / Belgium / Cyprus / Denmark / Europe / Faroe Islands / France / Finland / Finland, Metropolitan / Germany / Germany, Democratic Republic / Germany, Federal Republic / Greece / Holy See (Vatican City) / Italy / Luxembourg / Macedonia / Malta / Mediterranean / Monaco / Netherlands / Norway / Portugal / Republic of Moldova / Slovakia / Slovenia / Spain / Sweden / Switzerland / United Kingdom-Dependent Territories / United Kingdom-National Overseas / United Kingdom-Overseas Citizen / United Kingdom-Protected Person / United Kingdom-Subject",87:"Britain / Great Britain / Ireland",88:"Bahrain / Iran / Iraq / Palestine / Jordan / Kuwait / Lebanon / Middle East / Oman / Qatar / Republic of Yemen / Syria / Turkey / United Arab Emirates / Yemen Arab Republic / Yemen People's Democratic Republic",89:"Far East / Japan / North Korea / South Korea / Taiwan",90:"Bahamas / Barbados / Belize / Caribbean / Costa Rica / Cuba / Dominica / Dominican Republic / El Salvador / Grenada / Guatemala / Haiti / Honduras / Jamaica / Martinique / Mexico / Nicaragua / Panama / Puerto Rico / Saint Kitts and Nevis / Saint Lucia / Saint Vincent and the Grenadines / Trinidad and Tobago / Turks and Caicos Islands / Virgin Islands (USA)",91:"Canada / Greenland / Netherlands Antilles / North America / Saint Pierre and Miquelon / United States of America",92:"Albania / Belarus / Bosnia and Herzegovina / Bulgaria / Byelorussia / Croatia / Czech Republic / Czechoslovakia / Estonia / Georgia / Hungary / Latvia / Lithuania / Montenegro / Poland / Republic of Kosovo / Romania / Russian Federation / Serbia / Soviet Union / U.S.S.R. / Ukraine",93:"Afghanistan / Andorra / Antarctica / Antigua and Barbuda / Azerbaijan / Benin / Bermuda / Bhutan / Bora Bora / Bouvet Island / British Indian Ocean Territory / Burkina Faso / Cape Verde / Cayman Islands / Comoros / Dahomey / Equatorial Guinea / Falkland Islands / French Southern Territories / Gibraltar / Guinea-Bissau / Hong Kong / Iceland / Ivory Coast / Kazakhstan / Kiribati / Kyrgyzstan / Lesotho / Libya / Liechtenstein / Macau / Madagascar / Maghribi / Malagasy / Maldives / Mauritius / Mongolia / Montserrat / Nauru / Nepal / Northern Marianas Islands / Outer Mongolia / Palau / Palestine / Pitcairn Islands / Saint Helena / Saint Lucia / Saint Vincent and the Grenadines / Samoa / San Marino / São Tomé and Príncipe / Seychelles / Solomon Islands / Svalbard and Jan Mayen Islands / Tajikistan / Turkmenistan / Tuvalu / Upper Volta / Uzbekistan / Vanuatu / Vatican City / Virgin Islands (British) / Western Samoa / Yugoslavia",98:"Stateless / Stateless Person Article 1/1954",99:"Mecca / Neutral Zone / No Information / Refugee / Refugee Article 1/1951 / United Nations Specialized Agency / United Nations Organization / Unspecified Nationality"}}return r(a,[{key:"isValid",value:function(){return!(!this.getDateOfBirth()||!this.getState())}},{key:"getDateOfBirth",value:function(){var a=t()(),e=t()(this.rawDOB,"YYMMDD");return console.log(e.isAfter(a)),e.isAfter(a)&&(e=e.subtract(100,"y")),!!e.isValid()&&e.format("YYYY-MM-DD")}},{key:"getState",value:function(){var a=this,e=null;return Object.keys(this.states).some((function(n){if(-1!==n.split("|").indexOf(a.rawState))return e=a.states[n],a.states[n]})),e}},{key:"getGender",value:function(){return Number(this.rawEnd.slice(-1))%2==0?"female":"male"}},{key:"getRawInput",get:function(){return this.rawDOB+this.rawState+this.rawEnd}}]),a}();e.default=function a(e){if(function(a,e){if(!(a instanceof e))throw new TypeError("Cannot call a class as a function")}(this,a),void 0===e||"string"==typeof e&&0===e.length)throw new Error("nric number is required");if(this.nric=e.match(/^(\d{6})-?(\d{2})-?(\d{4})$/),!this.nric)throw new Error("Invalid nric format");return new o(this.nric[1],this.nric[2],this.nric[3])}}]).default}));